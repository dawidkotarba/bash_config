# HYBRIS
### conts ###
HYBRIS_LOG=hy.log

### generic ###
__on_hybris_platform(){
 rm -f $HYBRIS_LOG_PATH
 (cd $HYBRIS_HOME/bin/platform && $@ >> $HYBRIS_LOG_PATH &)
 sleep 1
 yy-log $@
}

__on_hybris_process(){
 local result=`ps -aux | grep hybris`
 echo "Operating on Hybris processes: $result"
 echo $result | awk {'print $2'} | xargs $@
}

__check_hybris_suffix(){
  if [[ ! $HYBRIS_FOLDER_SUFFIX ]]
   then __echo_err "HYBRIS SUFFIX NOT SET!"
  fi
}

__get_hybris_process(){
  jcmd | grep tanukisoftware | awk {'print $1'}
}

__hybris-start(){
 __check_and_start_hybris_mysql
 __on_hybris_platform sh hybrisserver.sh debug $@
}

__check_hybris_mysql_running(){
  local is_mysql_running=$(yy-dockermysqlip)
    if [[ $is_mysql_running ]]
    then
      __echo_ok "hybris MYSQL is running"
      export HYBRIS_MYSQL_RUNNING=true
    else
      __echo_err "hybris MYSQL is NOT running"
      export HYBRIS_MYSQL_RUNNING=false
    fi
}

__check_and_start_hybris_mysql(){
  if [[ ! $HYBRIS_MYSQL_RUNNING ]]
   then
    yy-dockermysqlstart
    __check_hybris_mysql_running
  fi
}

### yy ###
yy-home(){
 export HYBRIS_FOLDER_SUFFIX=$1
 export HYBRIS_HOME=$REPOSITORY_PATH/hybris_$HYBRIS_FOLDER_SUFFIX/hybris
 export HYBRIS_LOG_PATH=$HYBRIS_HOME/$HYBRIS_LOG
}

yy-ps(){
 local hybris_process=`__get_hybris_process`
 if [[ ! $hybris_process ]]
  then __echo_err "HYBRIS IS NOT RUNNING"
  else __echo_ok "HYBRIS IS RUNNING: $hybris_process"

 fi
}

yy-navigate(){
 __check_hybris_suffix
 cd $HYBRIS_HOME
}

yy-navigatecustom(){
 __check_hybris_suffix
 cd $HYBRIS_HOME/bin/custom
}

yy-navigateconfig(){
 __check_hybris_suffix
 cd $HYBRIS_HOME/config
}

yy-navigateplatform(){
 __check_hybris_suffix
 cd $HYBRIS_HOME/bin/platform
}

yy-log(){
 if [[ $@ != *'-nolog'* ]]
  then tail -f $HYBRIS_LOG_PATH
 fi
}

yy-logshow(){
 vim -R $HYBRIS_LOG_PATH
}

yy-logtomcat(){
 (yy-navigate && cd log/tomcat && ls -lt | grep console | tail -1 | awk '{print $9}' | xargs tail -f)
}

yy-setenv(){
 (yy-navigate-platform && sh setantenv.sh)
}

__yy-processes-to-kill(){
 ps aux | grep hybris | grep -v $HYBRIS_LOG | grep -v atom | awk '{print $2}' | xargs kill
}

yy-kill(){
 for i in {1..2}
 do
 __yy-processes-to-kill
 done

 sleep 1
 yy-ps
}

yy-kill9(){
 killall hybris -9
 yy-log $@
}

yy-visualvm(){
 jvisualvm --openpid `__get_hybris_process` &
}

yy-jcmd(){
 jcmd `__get_hybris_process` help
}

yy-configlocalproperties(){
 __check_hybris_suffix
 atom $HYBRIS_HOME/config/local.properties
}

yy-configlocalextensions(){
 __check_hybris_suffix
 atom $HYBRIS_HOME/config/localextensions.xml
}

### HYBRIS ANT ###
yy-req(){
 local rev_back=$1
 local changes_count=`git diff --name-only HEAD..HEAD~$rev_back | egrep '.impex|items.xml' | wc -l`
 if [[ $changes_count > 0 ]]
  then echo "ant initialize"
  else echo "ant clean all"
fi
}

yy-jrebel(){
 local ext_path=$1
 if [[ $ext_path ]]
  then (cd $ext_path && ant build)
  else ant build
 fi
}

yy-grunt(){
   local ext_path=$1
    (cd $ext_path && grunt)
}

yy-antall(){
  __on_hybris_platform ant all $@
}

yy-antclean(){
 __on_hybris_platform ant clean
}

yy-antcleanall(){
 __on_hybris_platform ant clean all $@
}

yy-antbuild(){
 __on_hybris_platform ant build $@
}

yy-antupdatesystem(){
 __on_hybris_platform ant updatesystem $@
}

yy-antjunit(){
 __on_hybris_platform ant yunitinit
}

yy-antextgen(){
 __check_hybris_suffix
 cd $HYBRIS_HOME/bin/platform
 ant extgen
}

yy-antmodulegen(){
 __check_hybris_suffix
 cd $HYBRIS_HOME/bin/platform
 ant modulegen
}

yy-antinitialize(){
  __check_and_start_hybris_mysql
  __on_hybris_platform ant initialize $@
}

yy-anttest(){
  __on_hybris_platform ant clean all yunitinit alltests
}

yy-antserver(){
 __on_hybris_platform ant server
}

yy-copydbdriver(){
 __check_hybris_suffix
 cp ~/APPS/Hybris/mysql/mysql-connector-java-5.1.35-bin.jar $HYBRIS_HOME/bin/platform/lib/dbdriver
}

yy-dockermysqlstart(){
  __check_hybris_suffix
  local mysql_container_name=mysql_$HYBRIS_FOLDER_SUFFIX
  kk-dockerstart $mysql_container_name
}

yy-dockermysqlip(){
  __check_hybris_suffix
  local mysql_container_name=mysql_$HYBRIS_FOLDER_SUFFIX
  kk-dockerip $mysql_container_name
}

yy-dockermysqlcreate(){
  __check_hybris_suffix
  local mysql_container_name=mysql_$HYBRIS_FOLDER_SUFFIX
  local mysql_version=""
  if [[ $1 ]]
   then mysql_version=:$1
  fi

  sudo docker run --name $mysql_container_name -e MYSQL_ROOT_PASSWORD=root -d mysql/mysql-server$mysql_version --innodb_flush_log_at_trx_commit=0
}
